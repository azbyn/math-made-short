#+BIND: org-latex-image-default-width ""
#+OPTIONS: toc:nil
#+OPTIONS: num:nil
#+LATEX_HEADER: \usepackage{geometry}\geometry{a4paper,left=15mm,right=20mm,top=20mm,bottom=30mm}

* ex 1 - cele mai mici patrate

avem \(x_i\) si \(f(x_i)\) din tabel
\medskip

si avem  \(y_{a, b, c} (x)\) forma functiei pe care vrem sa o aproximam (de ex \(ax^2+bx+c\))
\medskip

definim functia: 
\[ S(x, a, b, c) = \sum_i (f(x_i) - y_{a, b,c} (x_i))^2 \]

si derivam in raport cu variabilele:\\
(daca avem de ex \(a/x+b\) atunci derivam doar in raport cu \(a\) și \(b\)

\medskip

si obtinem un sistem
#+begin_export latex
\[
\begin{cases}
\dfrac{\partial S}{\partial a} = 0\\[1em]
\dfrac{\partial S}{\partial b} = 0\\[1em]
\dfrac{\partial S}{\partial c} = 0
\end{cases}
\]
#+end_export

și tada: solutia sistemului da coeficientii functiei pe care o cauți

* ex 2 - aproximare in medie patratica:
se cere "aproximarea in medie patratica prin polinoame \(Q\)"\footnote{i know, wrong quotes} de grad cel mult \(n\) pe 
\((a, b)\)\footnote{a, b pot fi infinit sau poate sa fie interval inchis} a functiei:

 - cauti "Q polynomials" pe motorul de cautare preferat si gasesti ceva de genul asta:
 https://mathworld.wolfram.com/LegendrePolynomial.html
 - te uiti pe siteul ala sa vezi care-i ponderea - in engleza e "weight"
 si se noteaza \(w(x)\), noi ramanem cu notatia profei si scriem \(p(x)\)
 - si gasesti primele \(n\) polinoame: \(Q_i(x)\)
 - calculezi produsul scalar cu functia ta: 
 \[ c_i = (f, P_i) = \int_a^b p(x) f(x) Q_i(x) dx \]
 - si ai aproximarea:
 \[ f(x) \approx P(x) = \sum_{i=1}^{n} c_i \cdot Q_i(x) \]
 cam ca la EDP, dar mai bine nu ne aducem aminte de asta acum

* ex 3 - derivare numerica
 calculati \(y^{(d)}(x_0) \) folosind o formula care foloseste toate elementele din multimea 
 \[A = \{y(x) | x \in \{x_i, |, i = 1..n \} \}\]
 - spoiler, \(y\) e acelasi ca la ex1
 - definim \(h_i = x_i - x_0\)
 - si avem sistemul
 #+begin_export latex
 \begin{pmatrix}
 h_1^0 &\cdots &h_n^0\\
 \vdots& \ddots& \vdots\\
 h_1^n  &\cdots& h_n^n
 \end{pmatrix}
\begin{pmatrix}
 \alpha_1\\
 \vdots\\
 \alpha_n\\
 \end{pmatrix}
 = 
 \begin{pmatrix}
 0\\
 \vdots\\
 d!\\
 \vdots\\
 \alpha_n\\
 \end{pmatrix}
 #+end_export

 in matricea din dreapta avem \(d!\) pe pozitia \(d+1\) (incepand numaratoarea de la 0)\\
 de ex daca avem de calculat \(y'\) atunci \(d=1\) si vine:
 #+begin_export latex
 \begin{pmatrix}
 0\\
 1!\\
 0\\
 \vdots\\
 0\\
 \end{pmatrix}
 #+end_export

 - rezolvam sistemul si avem valori pt \(\alpha_i\)
 - si estimarea e:
 \[ y^{(d)}(x_0) \approx \sum_{i=1}^n \alpha_i y(x_i) \]
 - restul e:
 \[R = -\frac{1}{n!} \sum_i \alpha_i \cdot  h_i ^ n \cdot  y^{(n)}(\xi_i)\]
 - restul il putem majora cu:
 \[|R| \leq \frac{1}{n!} \cdot \max\limits_\xi \left|y^{(n)}(\xi)\right| \cdot \sum_i \alpha_i \cdot  h_i ^ n\]

* ex 4:
- spoiler, \(y\) e acelasi ca la ex1
un exemplu:
https://github.com/azbyn/math-made-short/blob/master/calcul_numeric/gauss_stuff/gauss_stuff.pdf
